def waterfallStreams(array, source):
    # Write your code here.
    rowAbove = array[0][:]
    rowAbove[source] = -1 

    for row in range(1,len(array)):
        currentRow = array[row][:]
        for idx in range(len(rowAbove)):
            valueAbove = rowAbove[idx]

        hasWaterAbove = valueAbove < 0 
        hasBlock = currentRow[idx] == 1 

        if not hasWaterAbove:
           continue
        if not hasBlock: 
            currentRow[idx] += valueAbove
            continue
        splitWater = valueAbove / 2 # Move the water to the right
        rightIdx = idx 
        while rightIdx + 1 < len(rowAbove):
            if rowAbove[rightIdx] == 1: # if there is a block in the way
                break 
            if currentRow[rightIdx] != 1: # if there is no block below us
               currentRow[RightIdx] += splitWater
               break
        # Move water left.
        leftIdx = idx
        while leftIdx - 1 >= 0:
            leftIdx -= 1
            if rowAbove[leftIdx] == 1: # if there is a block on the way 
                break
            if currentRow[leftIdx] != 1: # if there is no block on the way 
               currentRow[leftIdx] += splitWater
               break

            rowAbove = currentRow

        # to convert our negative values to positive percentages
        finalPercentages = list(map(lambda num: num * -100, rowAbove))

        return finalPercentages
